name: Deploy to k8s
on:
  # run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-publish-huggingchat-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tailscale
        uses: huggingface/tailscale-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Extract package version
        id: package-version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          MAJOR=$(echo $VERSION | cut -d '.' -f1)
          echo "MAJOR=$MAJOR" >> $GITHUB_OUTPUT
          MINOR=$(echo $VERSION | cut -d '.' -f1).$(echo $VERSION | cut -d '.' -f2)
          echo "MINOR=$MINOR" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            registry.internal.huggingface.tech/chat-ui/chat-ui
          tags: |
            type=raw,value=${{ steps.package-version.outputs.VERSION }},enable=${{github.event_name == 'release'}}
            type=raw,value=${{ steps.package-version.outputs.MAJOR }},enable=${{github.event_name == 'release'}}
            type=raw,value=${{ steps.package-version.outputs.MINOR }},enable=${{github.event_name == 'release'}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: registry.internal.huggingface.tech
          username: ${{ secrets.DOCKER_INTERNAL_USERNAME }}
          password: ${{ secrets.DOCKER_INTERNAL_PASSWORD }}

      - name: Build and Publish Docker Image without DB
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-to: type=gha,mode=max,scope=amd64
          cache-from: type=gha,scope=amd64
          provenance: false
          build-args: |
            INCLUDE_DB=false
            APP_BASE=/chat
            PUBLIC_APP_COLOR=yellow
